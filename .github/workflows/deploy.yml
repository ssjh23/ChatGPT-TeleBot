# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Deploy to production

permissions:
  id-token: write
  contents: read
  
on:
  push:
    branches: [ "main" ]

jobs:

  build:
    name: Build image
    runs-on: ubuntu-latest
    defaults:
      run: 
        working-directory: ./backend

    steps:
    - name: Checkout repo
      uses: actions/checkout@v3
      
    - id: install-aws-cli
      uses: unfor19/install-aws-cli-action@v1
      with:
        version: 2                         # default
        verbose: false                     # default
        arch: amd64                        # allowed values: amd64, arm64

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
    - name: Read file contents
      run: cat app.env
    
    - name: Export ENV from AWS SecretManager
      uses: say8425/aws-secrets-manager-actions@v2
      with:
       AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
       AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
       AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
       SECRET_NAME: telebot_db_prod
       OUTPUT_PATH: 'app.env' # optional

    - name: Read file contents
      run: cat app.env

    - name: Build, tag, and push docker image to Amazon ECR
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        REPOSITORY: chatgpt-telebot
        IMAGE_TAG: ${{ github.sha }}
      run: |
        DOCKER_BUILDKIT=0 docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
        # docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
